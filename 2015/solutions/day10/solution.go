package day10

var elements = map[int]string{
	1:  "22",
	2:  "13112221133211322112211213322112",
	3:  "312211322212221121123222112",
	4:  "111312211312113221133211322112211213322112",
	5:  "1321132122211322212221121123222112",
	6:  "3113112211322112211213322112",
	7:  "111312212221121123222112",
	8:  "132112211213322112",
	9:  "31121123222112",
	10: "111213322112",
	11: "123222112",
	12: "3113322112",
	13: "1113222112",
	14: "1322112",
	15: "311311222112",
	16: "1113122112",
	17: "132112",
	18: "3112",
	19: "1112",
	20: "12",
	21: "3113112221133112",
	22: "11131221131112",
	23: "13211312",
	24: "31132",
	25: "111311222112",
	26: "13122112",
	27: "32112",
	28: "11133112",
	29: "131112",
	30: "312",
	31: "13221133122211332",
	32: "31131122211311122113222",
	33: "11131221131211322113322112",
	34: "13211321222113222112",
	35: "3113112211322112",
	36: "11131221222112",
	37: "1321122112",
	38: "3112112",
	39: "1112133",
	40: "12322211331222113112211",
	41: "1113122113322113111221131221",
	42: "13211322211312113211",
	43: "311322113212221",
	44: "132211331222113112211",
	45: "311311222113111221131221",
	46: "111312211312113211",
	47: "132113212221",
	48: "3113112211",
	49: "11131221",
	50: "13211",
	51: "3112221",
	52: "1322113312211",
	53: "311311222113111221",
	54: "11131221131211",
	55: "13211321",
	56: "311311",
	57: "11131",
	58: "1321133112",
	59: "31131112",
	60: "111312",
	61: "132",
	62: "311332",
	63: "1113222",
	64: "13221133112",
	65: "3113112221131112",
	66: "111312211312",
	67: "1321132",
	68: "311311222",
	69: "11131221133112",
	70: "1321131112",
	71: "311312",
	72: "11132",
	73: "13112221133211322112211213322113",
	74: "312211322212221121123222113",
	75: "111312211312113221133211322112211213322113",
	76: "1321132122211322212221121123222113",
	77: "3113112211322112211213322113",
	78: "111312212221121123222113",
	79: "132112211213322113",
	80: "31121123222113",
	81: "111213322113",
	82: "123222113",
	83: "3113322113",
	84: "1113222113",
	85: "1322113",
	86: "311311222113",
	87: "1113122113",
	88: "132113",
	89: "3113",
	90: "1113",
	91: "13",
	92: "3",
}

var evolutions = map[int][]int{
	1:  {1},
	2:  {72, 91, 1, 20, 3},
	3:  {2},
	4:  {32, 20, 3},
	5:  {4},
	6:  {5},
	7:  {6},
	8:  {7},
	9:  {8},
	10: {9},
	11: {10},
	12: {61, 11},
	13: {12},
	14: {13},
	15: {67, 14},
	16: {15},
	17: {16},
	18: {17},
	19: {18},
	20: {19},
	21: {67, 91, 1, 20, 27},
	22: {21},
	23: {22},
	24: {23},
	25: {24, 14},
	26: {25},
	27: {26},
	28: {30, 27},
	29: {28},
	30: {29},
	31: {63, 20, 89, 1, 20, 30},
	32: {67, 31},
	33: {32, 11},
	34: {33},
	35: {34},
	36: {35},
	37: {36},
	38: {37},
	39: {38, 92},
	40: {39, 1, 20, 43},
	41: {68, 40},
	42: {41},
	43: {42},
	44: {63, 20, 43},
	45: {67, 44},
	46: {45},
	47: {46},
	48: {47},
	49: {48},
	50: {49},
	51: {61, 50},
	52: {63, 20, 51},
	53: {67, 52},
	54: {53},
	55: {54},
	56: {55},
	57: {56},
	58: {57, 1, 20, 27},
	59: {58},
	60: {59},
	61: {60},
	62: {61, 20, 30},
	63: {62},
	64: {63, 20, 27},
	65: {67, 64},
	66: {65},
	67: {66},
	68: {67, 61},
	69: {68, 20, 27},
	70: {69},
	71: {70},
	72: {71},
	73: {72, 91, 1, 20, 74},
	74: {73},
	75: {32, 20, 74},
	76: {75},
	77: {76},
	78: {77},
	79: {78},
	80: {79},
	81: {80},
	82: {81},
	83: {61, 82},
	84: {83},
	85: {84},
	86: {67, 85},
	87: {86},
	88: {87},
	89: {88},
	90: {89},
	91: {90},
	92: {91},
}

func Solve() (part1 int, part2 int) {
	sequence := []int{83}
	for i := 0; i < 50; i++ {
		if i == 40 {
			part1 = calculateSequenceLength(sequence)
		}

		var nextSequence []int
		for _, element := range sequence {
			nextSequence = append(nextSequence, evolutions[element]...)
		}

		sequence = nextSequence
	}
	part2 = calculateSequenceLength(sequence)
	return
}

func calculateSequenceLength(sequence []int) (length int) {
	for _, element := range sequence {
		length += len(elements[element])
	}

	return
}
